package com.mni.api.location;

import com.mni.api.validation.Matches;
import com.mni.model.location.Location;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Size;

@ApiModel(description="DTO for Locations. Locations are the servers which provide products to clients (different locations for the same product have different data).")
public class LocationDto {

    @ApiModelProperty(value="Autogenerated ID for reference to location (used in GET, PUT, " +
            "and DELETE requests). Attempting to set a location's ID has no effect.")
    private Long id;

    @NotBlank
    @Matches("[0-9A-Za-z_]+")
    @Size(max = 255)
    @ApiModelProperty(value="Code representing the location used for configuration. " +
            "Typically three uppercase letters, then a number. Must be a sequence of alphanumeric characters or underscores.",
            example="CHI1",
            allowableValues = "range[1,255]",
            required=true)
    private String code;

    @NotBlank
    @Size(max = 255)
    @ApiModelProperty(value="Human-readable name describing the location. Cannot be blank.",
            example="Chicago 1",
            allowableValues = "range[1,255]",
            required=true)
    private String name;

    public LocationDto() {}

    public LocationDto(Long id, String code, String name) {
        this.id = id;
        this.code = code;
        this.name = name;
    }

    public static LocationDto translateLocationToLocationDto(Location location) {
        if(location == null) return null;
        LocationDto locationDto = new LocationDto();
        locationDto.setId(location.getId());
        locationDto.setCode(location.getCode());
        locationDto.setName(location.getName());
        return locationDto;
    }
    public static Location translateLocationDtoToLocation(LocationDto locationDto) {
        if(locationDto == null) return null;
        Location location = new Location();
        location.setId(locationDto.getId());
        location.setCode(locationDto.getCode());
        location.setName(locationDto.getName());
        return location;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Override
    public String toString() {
        return "LocationDto{" +
                "id=" + id +
                ", code='" + code + '\'' +
                ", name='" + name + '\'' +
                '}';
    }
}
